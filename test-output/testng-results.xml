<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{215=Tigran Aloe Isolani, 216=Jose Intensive Care Aloe Body Lotion, 299=Emmanuel Aloe Vera Beauty Gel, 365=Wilhelm Aloe Hydration Lotion}<br>]]>
    </line>
    <line>
      <![CDATA[High Product Price is: 365 Product name is: Wilhelm Aloe Hydration Lotion]]>
    </line>
    <line>
      <![CDATA[Low Product Price is: 215 Product name is: Tigran Aloe Isolani]]>
    </line>
    <line>
      <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{128=Boris Almond and Honey, 360=Alexander Almond & Honey Moisturiser}<br>]]>
    </line>
    <line>
      <![CDATA[High Product Price is: 360 Product name is: Alexander Almond & Honey Moisturiser]]>
    </line>
    <line>
      <![CDATA[Low Product Price is: 128 Product name is: Boris Almond and Honey]]>
    </line>
    <line>
      <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{250=Gary Bio Sandalwood SPF-50, 222=Akiba Amazing SPF-50}<br>]]>
    </line>
    <line>
      <![CDATA[High Product Price is: 250 Product name is: Gary Bio Sandalwood SPF-50]]>
    </line>
    <line>
      <![CDATA[Low Product Price is: 222 Product name is: Akiba Amazing SPF-50]]>
    </line>
    <line>
      <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{160=Vladimir Sun Expert SPF-30, 195=Vishy La Shield Sunscreen spf-30, 140=Magnus Resistant Sunscreen SPF-30}<br>]]>
    </line>
    <line>
      <![CDATA[High Product Price is: 195 Product name is: Vishy La Shield Sunscreen spf-30]]>
    </line>
    <line>
      <![CDATA[Low Product Price is: 140 Product name is: Magnus Resistant Sunscreen SPF-30]]>
    </line>
  </reporter-output>
  <suite started-at="2022-01-23T00:51:02 CST" name="TestSuite" finished-at="2022-01-23T00:51:20 CST" duration-ms="17956">
    <groups>
    </groups>
    <test started-at="2022-01-23T00:51:02 CST" name="FirefoxTest" finished-at="2022-01-23T00:51:19 CST" duration-ms="17226">
      <class name="weathershopper.SeleniumTest">
        <test-method is-config="true" signature="initiateBrowser(java.lang.String)[pri:0, instance:weathershopper.SeleniumTest@5f058f00]" started-at="2022-01-23T00:51:02 CST" name="initiateBrowser" finished-at="2022-01-23T00:51:06 CST" duration-ms="3737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateBrowser -->
        <test-method signature="WeatherShopperEndToEndAutomation()[pri:0, instance:weathershopper.SeleniumTest@5f058f00]" started-at="2022-01-23T00:51:06 CST" name="WeatherShopperEndToEndAutomation" finished-at="2022-01-23T00:51:19 CST" duration-ms="13457" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{215=Tigran Aloe Isolani, 216=Jose Intensive Care Aloe Body Lotion, 299=Emmanuel Aloe Vera Beauty Gel, 365=Wilhelm Aloe Hydration Lotion}<br>]]>
            </line>
            <line>
              <![CDATA[High Product Price is: 365 Product name is: Wilhelm Aloe Hydration Lotion]]>
            </line>
            <line>
              <![CDATA[Low Product Price is: 215 Product name is: Tigran Aloe Isolani]]>
            </line>
            <line>
              <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{128=Boris Almond and Honey, 360=Alexander Almond & Honey Moisturiser}<br>]]>
            </line>
            <line>
              <![CDATA[High Product Price is: 360 Product name is: Alexander Almond & Honey Moisturiser]]>
            </line>
            <line>
              <![CDATA[Low Product Price is: 128 Product name is: Boris Almond and Honey]]>
            </line>
          </reporter-output>
        </test-method> <!-- WeatherShopperEndToEndAutomation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:weathershopper.SeleniumTest@5f058f00]" started-at="2022-01-23T00:51:19 CST" name="teardown" finished-at="2022-01-23T00:51:19 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- weathershopper.SeleniumTest -->
    </test> <!-- FirefoxTest -->
    <test started-at="2022-01-23T00:51:02 CST" name="ChromeTest" finished-at="2022-01-23T00:51:20 CST" duration-ms="17956">
      <class name="weathershopper.SeleniumTest">
        <test-method is-config="true" signature="initiateBrowser(java.lang.String)[pri:0, instance:weathershopper.SeleniumTest@769f71a9]" started-at="2022-01-23T00:51:02 CST" name="initiateBrowser" finished-at="2022-01-23T00:51:04 CST" duration-ms="2141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initiateBrowser -->
        <test-method signature="WeatherShopperEndToEndAutomation()[pri:0, instance:weathershopper.SeleniumTest@769f71a9]" started-at="2022-01-23T00:51:04 CST" name="WeatherShopperEndToEndAutomation" finished-at="2022-01-23T00:51:20 CST" duration-ms="15785" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{250=Gary Bio Sandalwood SPF-50, 222=Akiba Amazing SPF-50}<br>]]>
            </line>
            <line>
              <![CDATA[High Product Price is: 250 Product name is: Gary Bio Sandalwood SPF-50]]>
            </line>
            <line>
              <![CDATA[Low Product Price is: 222 Product name is: Akiba Amazing SPF-50]]>
            </line>
            <line>
              <![CDATA[Product Name and price fetched from UI and saved in HashMap as:{160=Vladimir Sun Expert SPF-30, 195=Vishy La Shield Sunscreen spf-30, 140=Magnus Resistant Sunscreen SPF-30}<br>]]>
            </line>
            <line>
              <![CDATA[High Product Price is: 195 Product name is: Vishy La Shield Sunscreen spf-30]]>
            </line>
            <line>
              <![CDATA[Low Product Price is: 140 Product name is: Magnus Resistant Sunscreen SPF-30]]>
            </line>
          </reporter-output>
        </test-method> <!-- WeatherShopperEndToEndAutomation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:weathershopper.SeleniumTest@769f71a9]" started-at="2022-01-23T00:51:20 CST" name="teardown" finished-at="2022-01-23T00:51:20 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- weathershopper.SeleniumTest -->
    </test> <!-- ChromeTest -->
  </suite> <!-- TestSuite -->
</testng-results>
